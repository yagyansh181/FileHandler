/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FileScrappers;

import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Charchit Howitzer
 */
public class FileHandlerGUI extends javax.swing.JFrame {
    /**
     * Creates new form FileHandlerGUI
     */
    public FileHandlerGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jButton4 = new javax.swing.JButton();
        jToggleButton2 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("File Scrapper");

        jLabel1.setText("Choose Source Folder to be scanned");

        jButton2.setText("Choose");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Choose folder you want to Create");

        jButton3.setText("Choose");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel3.setText("Source Folder");

        jLabel4.setText("Target Folder");

        jButton1.setText("Start Scanning");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jRadioButton1.setText("Audio");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("Video");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setText("Images");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton4.setText("Documents");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jRadioButton6.setText("All");
        jRadioButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton6ActionPerformed(evt);
            }
        });

        jRadioButton5.setText("Others");
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });

        jButton4.setText("First scan to start copying");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jToggleButton2.setBackground(new java.awt.Color(255, 255, 255));
        jToggleButton2.setText("Copying Files");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jToggleButton2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRadioButton3)
                                    .addComponent(jRadioButton1)
                                    .addComponent(jRadioButton5))
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(14, 14, 14)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jRadioButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jRadioButton4, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jRadioButton6, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(105, Short.MAX_VALUE))))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jRadioButton1, jRadioButton2, jRadioButton3, jRadioButton4, jRadioButton6});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton5)
                    .addComponent(jRadioButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addComponent(jToggleButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    static int mve,totfiles=0,mved=0;
    double per;
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    JFileChooser chooser1=new JFileChooser();
    chooser1.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    int option=chooser1.showOpenDialog(this);

            if(option == JFileChooser.APPROVE_OPTION){
               File file = chooser1.getSelectedFile();
               jLabel3.setText(file.getAbsolutePath());
               search.scnddir=file.getAbsolutePath();
               System.out.println("Source Folder Selected: " + file.getName());
            }else{
               System.out.println("Open command canceled");
            }
            
         // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    JFileChooser chooser1=new JFileChooser();
    chooser1.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    int option=chooser1.showOpenDialog(this);

            if(option == JFileChooser.APPROVE_OPTION){
               File file = chooser1.getSelectedFile();jLabel4.setText(file.getAbsolutePath());search.tophir=file.getAbsolutePath();
               System.out.println("Target Folder Selected: " + file.getName());
            }else{
               System.out.println("Open command canceled");
            }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int flg1=1;        
        File src= new File(jLabel3.getText());
        File dst= new File(jLabel4.getText());
        try {
        if(!src.exists())
        {
            JOptionPane.showMessageDialog(this,"Source folder either not selected or does not exists","ERROR",JOptionPane.ERROR_MESSAGE);}
        else if(!dst.exists())
        {
            JOptionPane.showMessageDialog(this,"Destination folder either not selected or does not exists","ERROR",JOptionPane.ERROR_MESSAGE);
            }
        else
        {
            search.main(null); 
            if (flg1==1){
            jButton4.setEnabled(true);
            jButton4.setText("Start Copying");
            }
        }                    // TODO add your handling code here:
        } catch (IOException ex) {
            Logger.getLogger(FileHandlerGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton6ActionPerformed
        if (jRadioButton6.isSelected()){
        jRadioButton1.setSelected(true);   
        jRadioButton2.setSelected(true);
        jRadioButton3.setSelected(true);
        jRadioButton4.setSelected(true);
        jRadioButton5.setSelected(true);
        totfiles=search.audio.size()+search.video.size()+search.image.size()+search.document.size()+search.others.size();
        System.out.println("Total files are "+totfiles);
    // TODO add your handling code here:
        }
    }//GEN-LAST:event_jRadioButton6ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        if(jToggleButton2.isSelected())
        {   
            jButton4.setText("Start Moving");
            jToggleButton2.setText("Moving files");
            mve=1;
            //jToggleButton2.setBackground(Color.red);
        } 
        if(!jToggleButton2.isSelected())
        {
            jButton4.setText("Start Copying");
            jToggleButton2.setText("Copying files");
            mve=0;
           // jToggleButton2.setBackground(Color.green);
        }  // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
        
        if(jRadioButton1.isSelected()||jRadioButton2.isSelected()||jRadioButton3.isSelected()||jRadioButton4.isSelected()||jRadioButton5.isSelected())
        {
            
        
       /* jProgressBar1.setValue(0);
        jProgressBar1.setString("Starting the Process ");
        jProgressBar1.repaint();
            */
        jToggleButton2.setVisible(false);
        mved=0;
        
        if(jRadioButton1.isSelected()) { try {
            search.copyAudioFiles(search.audio,mve);
            } catch (IOException ex) {
                Logger.getLogger(FileHandlerGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        }
        
        if(jRadioButton2.isSelected()) { try {
            search.copyVideoFiles(search.video,mve);
            } catch (IOException ex) {
                Logger.getLogger(FileHandlerGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        }
        
        if(jRadioButton3.isSelected()) { try {
            search.copyImageFiles(search.image,mve);
            } catch (IOException ex) {
                Logger.getLogger(FileHandlerGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        }
        
        if(jRadioButton4.isSelected()) { try {
            search.copyDocumentsFiles(search.document,mve);
            } catch (IOException ex) {
                Logger.getLogger(FileHandlerGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        }
        
        if(jRadioButton5.isSelected()) { try {
            search.copyOtherFiles(search.others,mve);
            } catch (IOException ex) {
                Logger.getLogger(FileHandlerGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        }
        
        
        }
        else
        {
        JOptionPane.showMessageDialog(this,"Files to move or copy are not selected please select ! ","ERROR",JOptionPane.ERROR_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
         if(jRadioButton1.isSelected())
        {   
            totfiles=totfiles+search.audio.size();
            
        } 
        if(!jRadioButton1.isSelected()&&totfiles!=0)
        {
            totfiles=totfiles-search.audio.size();
        }        // TODO add your handling code here:
        System.out.println("Total files are "+totfiles);
        //jProgressBar1.setMaximum(totfiles);
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        if(jRadioButton2.isSelected())
        {   
            totfiles=totfiles+search.video.size();
        } 
        if(!jRadioButton2.isSelected()&&totfiles!=0)
        {
            totfiles=totfiles-search.video.size();
        }        // TODO add your handling code here:
        System.out.println("Total files are "+totfiles);
        //jProgressBar1.setMaximum(totfiles);
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
 if(jRadioButton3.isSelected())
        {   
            totfiles=totfiles+search.image.size();
        } 
        if(!jRadioButton3.isSelected()&&totfiles!=0)
        {
            totfiles=totfiles-search.image.size();
        }         // TODO add your handling code here:
        System.out.println("Total files are "+totfiles);
       // jProgressBar1.setMaximum(totfiles);
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
    if(jRadioButton4.isSelected())
        {   
            totfiles=totfiles+search.document.size();
        } 
        if(!jRadioButton4.isSelected()&&totfiles!=0)
        {
            totfiles=totfiles-search.document.size();
        }        // TODO add your handling code here:
        System.out.println("Total files are "+totfiles);
        //jProgressBar1.setMaximum(totfiles);
        
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
    if(jRadioButton5.isSelected())
        {   
            totfiles=totfiles+search.others.size();
        } 
        if(!jRadioButton5.isSelected()&&totfiles!=0)
        {
            totfiles=totfiles-search.others.size();
        }        // TODO add your handling code here:
        System.out.println("Total files are "+totfiles);
        //jProgressBar1.setMaximum(totfiles);
    }//GEN-LAST:event_jRadioButton5ActionPerformed
    
 

        
    public void updateprogressbar()
    {
        
        
        
    mved=mved+1;
    System.out.println("Relocating Files "+mved+" of "+ " "+ totfiles+" "+Math.round(((mved*1.0/totfiles*1.0)*100.0)*100)/100.00+"% ...");
  
    
    
    
   /*SwingUtilities.invokeLater(new Runnable() 
        {
            @Override
            public void run() 
            {
              jProgressBar1.setString("Relocating Files "+mved+" of "+ " "+ totfiles+" "+Math.round(((mved*1.0/totfiles*1.0)*100.0)*100)/100.00+"% ...");
                jProgressBar1.setValue(100);
                jProgressBar1.repaint();
            //System.out.println("Relocating Files "+mved+" of "+ " "+ totfiles+" "+Math.round(((mved*1.0/totfiles*1.0)*100.0)*100)/100.00+"% ...");
                //jProgressBar1.updateUI();
    
    
            }
        });
    
    
    */
    
    }
     

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileHandlerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileHandlerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileHandlerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileHandlerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FileHandlerGUI().setVisible(true);
               
                

                
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JToggleButton jToggleButton2;
    // End of variables declaration//GEN-END:variables
}